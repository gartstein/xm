syntax = "proto3";
package definition.v1;

option go_package = "github.com/gartstein/xm/gen/api/definition/v1;apiv1";

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";

service CompanyService {
  rpc CreateCompany(CreateCompanyRequest) returns (CreateCompanyResponse) {
    option (google.api.http) = {
      post: "/v1/companies"
      body: "*"
    };
  }

  rpc UpdateCompany(UpdateCompanyRequest) returns (UpdateCompanyResponse) {
    option (google.api.http) = {
      patch: "/v1/companies/{id}"
      body: "*"
    };
  }

  rpc DeleteCompany(DeleteCompanyRequest) returns (DeleteCompanyResponse) {
    option (google.api.http) = {
      delete: "/v1/companies/{id}"
    };
  }

  rpc GetCompany(GetCompanyRequest) returns (GetCompanyResponse) {
    option (google.api.http) = {
      get: "/v1/companies/{id}"
    };
  }
}

message Company {
  string id = 1;
  string name = 2;
  string description = 3;
  int32 employees = 4;
  bool registered = 5;
  CompanyType type = 6;
  google.protobuf.Timestamp created_at = 7;
  google.protobuf.Timestamp updated_at = 8;
}

enum CompanyType {
  COMPANY_TYPE_CORPORATIONS = 0;
  COMPANY_TYPE_NON_PROFIT = 1;
  COMPANY_TYPE_COOPERATIVE = 2;
  COMPANY_TYPE_SOLE_PROPRIETORSHIP = 3;
}

message CreateCompanyRequest {
  Company company = 1;
}

message CreateCompanyResponse {
  Company company = 1;
}

message UpdateCompanyRequest {
  string id = 1;
  Company company = 2;
}

message UpdateCompanyResponse {
  Company company = 1;
}

message DeleteCompanyRequest {
  string id = 1;
}

message DeleteCompanyResponse {
  // Empty response; add fields if needed.
}

message GetCompanyRequest {
  string id = 1;
}

message GetCompanyResponse {
  Company company = 1;
}